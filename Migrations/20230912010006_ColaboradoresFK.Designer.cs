// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RotaLimpa.Api.Data;

#nullable disable

namespace RotaLimpa.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230912010006_ColaboradoresFK")]
    partial class ColaboradoresFK
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RotaLimpa.Api.Models.Colaboradores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Dc_Colaborador")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("nvarchar(14)")
                        .HasColumnName("dbColaborador");

                    b.Property<int>("Empresa_IdId")
                        .HasColumnType("int");

                    b.Property<int>("EmpresasId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("Nome");

                    b.Property<string>("St_Colaborador")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("stColaborador");

                    b.HasKey("Id");

                    b.HasIndex("Empresa_IdId");

                    b.HasIndex("EmpresasId");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Colaboradores");
                });

            modelBuilder.Entity("RotaLimpa.Api.Models.Empresas", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Da_Empresa")
                        .HasColumnType("datetime2")
                        .HasColumnName("da_empresa")
                        .HasComment("DATA DA ULTIMA ALTERAÇÃO");

                    b.Property<string>("Dc_Empresa")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nvarchar(18)")
                        .HasColumnName("dc_empresa")
                        .HasComment("CNPJ");

                    b.Property<DateTime>("Di_Empresa")
                        .HasColumnType("datetime2")
                        .HasColumnName("di_empresa")
                        .HasComment("DATA DE INCLUSÃO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("Nome");

                    b.Property<int>("St_Empresa")
                        .HasColumnType("int")
                        .HasColumnName("st_empresa")
                        .HasComment("SITUAÇÃO DA EMPRESA");

                    b.HasKey("Id");

                    b.HasIndex("Dc_Empresa")
                        .IsUnique();

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("RotaLimpa.Api.Models.Colaboradores", b =>
                {
                    b.HasOne("RotaLimpa.Api.Models.Empresas", "Empresa_Id")
                        .WithMany()
                        .HasForeignKey("Empresa_IdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RotaLimpa.Api.Models.Empresas", "Empresas")
                        .WithMany()
                        .HasForeignKey("EmpresasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa_Id");

                    b.Navigation("Empresas");
                });
#pragma warning restore 612, 618
        }
    }
}
